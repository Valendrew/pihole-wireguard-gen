version: "3.8"

services:
  wg-easy:
    image: weejewel/wg-easy
    container_name: wg-easy
    environment:
      - WG_HOST=${WIREGUARD_HOST}
      - PASSWORD=${WIREGUARD_PASSWORD}
      - WG_DEVICE=eth0
      - WG_PORT=${WIREGUARD_PORT}
      - WG_MTU=1380
      - WG_PERSISTENT_KEEPALIVE=25
      - WG_DEFAULT_ADDRESS=192.168.2.x
      - WG_DEFAULT_DNS=10.8.1.3
      - WG_ALLOWED_IPS=192.168.1.0/24
    volumes:
      - /docker/appdata/wireguard_config:/etc/wireguard
    ports:
      - "${WIREGUARD_PORT}:51820/udp"
      - "51821:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      pi-network:
        ipv4_address: 10.8.1.2
    labels:
      - homepage.group=RaspberryPi
      - homepage.name=WireGuard
      - homepage.icon=wireguard.png
      - homepage.href=http://${DEVICE_IP}:51821
      - homepage.description=WireGuard Clients
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    environment:
      - TZ=Europe/Rome
      - WEBTHEME=default-dark
      - WEBPASSWORD=${PIHOLE_PASSWORD}
      - DNSMASQ_LISTENING=local
    volumes:
      - "/docker/appdata/pihole_config/etc-pihole:/etc/pihole"
      - "/docker/appdata/pihole_config/etc-dnsmasq.d:/etc/dnsmasq.d"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "${PIHOLE_PORT}:80/tcp"
    dns: 127.0.0.1
    networks:
      pi-network:
        ipv4_address: 10.8.1.3
    labels:
      - homepage.group=RaspberryPi
      - homepage.name=Pihole
      - homepage.icon=pi-hole.png
      - homepage.href=http://${DEVICE_IP}:5353/admin/login.php
      - homepage.description=Pihole management
      - homepage.widget.type=pihole
      - homepage.widget.url=http://${DEVICE_IP}:5353
      - homepage.widget.key=${PIHOLE_API_KEY}
    restart: unless-stopped

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    networks:
      pi-network:
        ipv4_address: 10.8.1.4
    ports:
      - "${HOMEPAGE_PORT}:3000"
    volumes:
      - /docker/appdata/homepage_config:/app/config
    restart: unless-stopped

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    networks:
      pi-network:
        ipv4_address: 10.8.1.5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    restart: unless-stopped

networks:
  pi-network:
    ipam:
      config:
        - subnet: 10.8.1.0/24
